data <- data[c(8,1:7,9:50),] # put DC at the top because it's not in the state.name list
plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[-2]),cex=.7)
library(foreign)
library(arm)
library(plyr)
library("choroplethr")
library("choroplethrMaps")
setwd("/Users/JPC/Documents/Columbia/2nd Semester/2. Sample Surveys/2. Homeworks")
pew <- read.dta("hw3a/pew_research_center_june_elect_wknd_data.dta")
pew.red <- subset(pew,ideo!="dk/refused")
lib <- function(x) return(ifelse(x=="conservative" || x=="very conservative",1,0))
pew.red$liberal <- sapply(pew.red$ideo,lib)
pew.s <- ddply(.data = pew.red,.fun = summarize,.variables = "state",liberal=sum(liberal),total=length(state))
pew.s$libprop <- with(pew.s,100*liberal/total)
l.election <- read.csv("hw4a/2008ElectionResult.csv",header=T)
l.election$state <- tolower(l.election$state)
pew.s$state <- sapply(pew.s$state,toString)
pew.s$state[pew.s$state=="washington dc"] <-"district of columbia"
data <- merge(pew.s,l.election[c("state","vote_Obama_pct")],by="state",all = T)
data <- data[-2,] # Alaska is not in the 2008 election database
sum(data$state[-8]==tolower(state.name[-2])) # validate that the names match
data <- data[c(8,1:7,9:50),] # put DC at the top because it's not in the state.name list
plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[-2]),cex=.7)
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
library(foreign)
library(arm)
library(plyr)
library("choroplethr")
library("choroplethrMaps")
setwd("/Users/JPC/Documents/Columbia/2nd Semester/2. Sample Surveys/2. Homeworks")
pew <- read.dta("hw3a/pew_research_center_june_elect_wknd_data.dta")
pew.red <- subset(pew,ideo!="dk/refused")
lib <- function(x) return(ifelse(x=="conservative" || x=="very conservative",1,0))
pew.red$liberal <- sapply(pew.red$ideo,lib)
pew.s <- ddply(.data = pew.red,.fun = summarize,.variables = "state",liberal=sum(liberal),total=length(state))
pew.s$libprop <- with(pew.s,100*liberal/total)
l.election <- read.csv("hw4a/2008ElectionResult.csv",header=T)
l.election$state <- tolower(l.election$state)
pew.s$state <- sapply(pew.s$state,toString)
pew.s$state[pew.s$state=="washington dc"] <-"district of columbia"
data <- merge(pew.s,l.election[c("state","vote_Obama_pct")],by="state",all = T)
data <- data[-2,] # Alaska is not in the 2008 election database
sum(data$state[-8]==tolower(state.name[-2])) # validate that the names match
data <- data[c(8,1:7,9:50),] # put DC at the top because it's not in the state.name list
plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[-2]),cex=.7)
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
data <- merge(pew.s,l.election[c("state","vote_Obama_pct")],by="state",all = T)
data
pew.s$state
pew <- read.dta("hw3a/pew_research_center_june_elect_wknd_data.dta")
pew
pew.s$state
jitter(c(1,1,1,1,1,1,2,2,2,2,2,2,2))
setwd("/Users/JPC/Documents/Columbia/2nd Semester/2. Sample Surveys/2. Homeworks")
pew <- read.dta("hw3a/pew_research_center_june_elect_wknd_data.dta")
pew.red <- subset(pew,ideo!="dk/refused")
lib <- function(x) return(ifelse(x=="liberal" || x=="very liberal",1,0))
pew.red$liberal <- sapply(pew.red$ideo,lib)
pew.s <- ddply(.data = pew.red,.fun = summarize,.variables = "state",liberal=sum(liberal),total=length(state))
pew.s
pew.s[11,]
pew.s <- pew.s[-11,]  # Drop Hawaii
pew.s$libprop <- with(pew.s,100*liberal/total)
l.election <- read.csv("hw4a/2008ElectionResult.csv",header=T)
l.election$state <- tolower(l.election$state)
l.election
pew.s
l.election <- read.csv("hw4a/2008ElectionResult.csv",header=T)
l.election
l.election$state <- tolower(l.election$state)
l.election[c(2,12),]
l.election <- l.election[c(-2,-12),] # drop Hawaii and Alaska
l.election
pew.s$state <- sapply(pew.s$state,toString)
pew.s$state[pew.s$state=="washington dc"] <-"district of columbia"
data <- merge(pew.s,l.election[c("state","vote_Obama_pct")],by="state",all = T)
sum(data$state[-8]==tolower(state.name[-2])) # validate that the names match
data$state
length(data$state)
length(state.name)
state.name
sum(data$state==tolower(state.name[-2])) # validate that the names match
data$state
state.name
sum(data$state[-8]==tolower(state.name[c(-2,-11)])) # validate that the names match
sum(data$state[-8]==tolower(state.name[c(-2,-11)]))-48 # validate that the names match
plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
state.name
cbind(state.name,state.abb)
data
data <- data[c(8,1:7,9:50),] # put DC at the top because it's not in the state.name list
data
data <- data[c(8,1:7,9:49),] # put DC at the top because it's not in the state.name list
data <- merge(pew.s,l.election[c("state","vote_Obama_pct")],by="state",all = T)
sum(data$state[-8]==tolower(state.name[c(-2,-11)]))-48 # validate that the names match
data <- data[c(8,1:7,9:49),] # put DC at the top because it's not in the state.name list
data
plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
lowess(data$libprop,data$total)
curve(lowess(data$libprop,data$total))
curve(expr = lowess(data$libprop,data$total))
lines(expr = lowess(data$libprop,data$total))
lines(lowess(data$libprop,data$total))
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
setwd("/Users/JPC/Documents/Columbia/2nd Semester/2. Sample Surveys/2. Homeworks/hw4a")
pew <- read.dta("../hw3a/pew_research_center_june_elect_wknd_data.dta")
?layout
def.par <- par(no.readonly = TRUE) # save default, for resetting...
## divide the device into two rows and two columns
## allocate figure 1 all of row 1
## allocate figure 2 the intersection of column 2 and row 2
layout(matrix(c(1,1,0,2), 2, 2, byrow = TRUE))
## show the regions that have been allocated to each plot
layout.show(2)
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
lines(lowess(data$libprop,data$total))
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
dev.off()
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
layout(matrix(c(1,2), 2, 1, byrow = TRUE))
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
layout(matrix(c(1,2), 2, 1, byrow = TRUE))
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot1 <- plot(data$libprop,data$vote_Obama_pct,pch=19,cex=1,col="white",main="% Liberals Versus % Voted Obama",xlab="% Liberals",ylab="% Voted Obama")
text(data$libprop,data$vote_Obama_pct,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
plot(data$libprop,data$total,pch=19,cex=1,col="white",main="% Liberals Versus Sample Size",xlab="% Liberals",ylab="Sample Size")
text(data$libprop,data$total,labels = c("DC",state.abb[c(-2,-11)]),cex=.7)
data.map <- data.frame(region=data$state,value=data$libprop,stringsAsFactors = F)
state_choropleth(data.map,title="Proportion of liberals by State",legend="proportion liberal")
data
state.name
cbind(state.name,state.abb)
getwd()
setwd("..")
getwd()
setwd("../..")
getwd()
list.files()
setwd("")
setwd("1. Applied Data Science")
getwd()
list.files()
setwd("2. Homeworks")
list.files()
setwd("Project 2")
setwd("app_p2")
library(shiny)
getwd()
setwd("..")
runApp(app_p2)
getwd()
list.files()
runApp("app_p2")
runApp("app_p2")
runApp("app_example1")
runApp("app_example2")
install.packages("DT")
runApp("app_example2")
runApp("app_example2")
install.packages("shinythemes")
library(shinythemes)
runApp("app_example2")
runApp("app_example2")
runApp("app_example2")
runApp("app_example2")
runApp("app_example2")
runApp("app_example2")
list.files()
list.files("project2-group4")
runApp("project2-group4/app")
install.packages("choroplethrZip")
runApp("project2-group4/app")
colors = c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")
# use cut() to convert numeric to factor
unemp$colorBuckets = as.numeric(cut(unemp$unemp, c(0, 2, 4, 6, 8, 10, 100)))
colors = c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")
unemp$colorBuckets = as.numeric(cut(unemp$unemp, c(0, 2, 4, 6, 8, 10, 100)))
data(unemp)
data(county.fips)
library(maps)
library(mapdata)
install.packages("mapdata")
library(mapdata)
map()
data(unemp)
data(county.fips)
colors = c("#F1EEF6", "#D4B9DA", "#C994C7", "#DF65B0", "#DD1C77", "#980043")
# use cut() to convert numeric to factor
unemp$colorBuckets = as.numeric(cut(unemp$unemp, c(0, 2, 4, 6, 8, 10, 100)))
leg.txt = c("<2%", "2-4%", "4-6%", "6-8%", "8-10%", ">10%")
# align data with map definitions by (partial) matching state,county
# names, which include multiple polygons for some counties
cnty.fips = county.fips$fips[match(map("county", plot=FALSE)$names,
county.fips$polyname)]
colorsmatched = unemp$colorBuckets[match(cnty.fips, unemp$fips)]
library(fields)
install.packages("fields")
library(fields)
map("county", col = colors[colorsmatched], fill = TRUE, resolution = 0,
lty = 0, projection = "polyconic")
dev.off()
map("county", col = colors[colorsmatched], fill = TRUE, resolution = 0,
lty = 0, projection = "polyconic")
map("state", col = "white", fill = FALSE, add = TRUE, lty = 1, lwd = 0.2,
projection="polyconic")
map.scale(relwidth = 0.15)
title("unemployment by county, 2009")
legend("topright", leg.txt, horiz = TRUE, fill = colors)
zr = rbind( c(1,6), c(1,6)) # separate ranges for columns of y.
colorbar.plot(x=1,y=5,strip=colorsmatched, adj.x=1, zrange= zr)
image.plot(z=colorsmatched, breaks=c(0, 2, 4, 6, 8, 10, 100),col = colors,legend.only=TRUE)
library(maptools) #for shapefiles
library(scales) #for transparency
install.packages("maptools")
library(maptools) #for shapefiles
library(scales) #for transparency
# First read in shapefiles that contain layers of data for species range
pinuocci = readShapePoly("./pinuocci/pinuocci.shp")
library(sp)
slist = split(Snow.streets[,c("x","y")],as.factor(Snow.streets[,"street"]))
library(HistData)
data(Snow.deaths); data(Snow.pumps); data(Snow.streets); data(Snow.polygons)
install.packages("HistData")
library(HistData)
data(Snow.deaths); data(Snow.pumps); data(Snow.streets); data(Snow.polygons)
slist = split(Snow.streets[,c("x","y")],as.factor(Snow.streets[,"street"]))
Ll1 = lapply(slist,Line)
Lsl1 = Lines(Ll1,"Street")
Snow.streets.sp = SpatialLines(list(Lsl1))
plot(Snow.streets.sp, col="gray")
title(main="Snow's Cholera Map of London (sp)")
Snow.deaths.sp = SpatialPoints(Snow.deaths[,c("x","y")])
plot(Snow.streets.sp, col="gray");title(main="Snow's Cholera Map of London (sp)");plot(Snow.deaths.sp, add=TRUE, col ='red', pch=15, cex=0.6)
spp = SpatialPoints(Snow.pumps[,c("x","y")])
Snow.pumps.sp = SpatialPointsDataFrame(spp,Snow.pumps[,c("x","y")])
plot(Snow.streets.sp, col="gray");title(main="Snow's Cholera Map of London (sp)");plot(Snow.deaths.sp, add=TRUE, col ='red', pch=15, cex=0.6);plot(Snow.pumps.sp, add=TRUE, col='blue', pch=17, cex=1.5)
text(Snow.pumps[,c("x","y")], labels=Snow.pumps$label, pos=1, cex=0.8)
runApp("app_example2")
setwd()
getwd()
list.files()
setwd("project2-group4")
runApp("app_example2")
?foreign
getwd()
ppp <- read.dta("/Users/JPC/Downloads/TC234.mdb")
install.packages("RODBC")
getwd()
runApp("app")
install.packages("choroplethrZip")
runApp("app")
install.packages("choroplethrZip")
install_github("arilamstein/choroplethrZip")
devtools::install_github("arilamstein/choroplethrZip")
runApp("app")
n
?n
runApp("app")
?zip.map
load(zip.map)
data(zip.map)
?zip.map
zip.map$region
data.frame(region=zip.map$region,value=rnorm(length(zip.map$region),0,1))
data.zip <- data.frame(region=zip.map$region,value=rnorm(length(zip.map$region),0,1))
zip_choropleth(data.zip,
title       = "2009 Manhattan housing sales",
legend      = "Number of sales",
county_zoom = 36061)
zip.map$region[36061]
names(zip.map)
?sim
x <- unif(100,2,5)
x <- runif(100,2,5)
y <- x*2+rnorm(100,0,1)
model <- lm(y~x)
sim(model,3)
model
install.packages("maps")
install.packages("mapproj")
statemaps <- function (a, grayscale=FALSE, ...){
if (length(a)==51){
no.dc <- c(1:8,10:51)
a <- a[no.dc]
}
if (length(a)==50){
lower48 <- state.abb!="AK" & state.abb!="HI"
a <- a[lower48]
}
else if (length(a)!=48) stop ("wrong number of states")
mapping <- list (1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20:22,23:24,25,26,27,28,29,30,31,32,33,34:37,38:40,41,42,43,44,45,46,47,48,49,50,51,52,53:55,56:60,61,62,63)
# for (i in 1:length(mapping)) print(regions[mapping[[i]]])
a.long <- rep (NA, 63)
projection <- "bonne"
for (i in 1:48){
a.long[mapping[[i]]] <- a[i]
}
if (grayscale){
a.long.scaled <- .95*(a.long-min(a,na.rm=TRUE))/(max(a,na.rm=TRUE)-min(a,na.rm=TRUE))
shades <- a.long.scaled
not.dc <- !is.na(a.long.scaled)
shades[not.dc] <- gray (shades[not.dc])
map('state', proj=projection, param=25, lty=0, ...)
m <- map('state', proj=projection, param=25, fill=TRUE, plot=FALSE)
polygon(m$x,m$y, col=shades, lwd=0.5, border="gray30")
}
else {
map('state', proj=projection, param=25, lty=0, ...)
m <- map('state', proj=projection, param=25, fill=TRUE, plot=FALSE)
polygon(m$x,m$y, col=a.long, lwd=0.5, border="gray30")
}
}
# Functions that make a pretty color scheme
blrd <- function(n) {
if (n %% 2 == 1){
n2 <- (n + 1)/2
return(c(hsv(4/6,1,0.6,alpha=seq(1,0,length.out=n2))[1:(n2-1)], "white", hsv(1,1,0.6,alpha=seq(0,1,length.out=n2))[2:n2]))
}
else if (n %% 2 == 0) {
n2 <- n/2
return(c(hsv(4/6,1,0.6,alpha=seq(1,0,length.out=(n2+1)))[1:n2], hsv(1,1,0.6,alpha=seq(0,1,length.out=(n2+1)))[2:(n2+1)]))
}
}
redblue <- function (a, lo=min(a), hi=max(a), n.shades=1001){
a <- pmin (hi, pmax (lo, a))
return (blrd(n.shades)[floor (1 + (n.shades-1)*(a-lo)/(hi-lo))])
}
elections <- read.table("http://www.stat.columbia.edu/~gelman/surveys.course/pres20042008.txt")
no_dc <- rownames(elections) != "DC"
# Now let's make some maps!
png ("2008_2004_residuals.png", height=300, width=400)
par (mar=c(2,0,0,0))
M1 <- lm (obama08 ~ kerry04, data=elections, subset=no_dc)
statemaps (resid(M1), grayscale=TRUE)
mtext ("Residuals from predicting Obama08 from Kerry04", line=-1)
mtext ("Light colors:  Obama did relatively well in 2008,\nDark colors:  McCain did relatively well in 2008", side=1, line=0, cex=.8)
dev.off()
png ("2008_2004_difference.png", height=300, width=400)
par (mar=c(0,0,0,0))
x <- elections[no_dc,"kerry04"]
y <- elections[no_dc,"obama08"]
statemaps (redblue(x-y, -.1, .1))
mtext ("Obama did better than Kerry in nearly every state", line=-2)
mtext ("Blue:  Obama did better in 2008 than Kerry did in 2004,\nRed:  Obama did worse than Kerry,\nLight colors:  Little or no change", side=1, line=-1, cex=.8)
dev.off()
library(maps)
library(mapproj)
statemaps <- function (a, grayscale=FALSE, ...){
if (length(a)==51){
no.dc <- c(1:8,10:51)
a <- a[no.dc]
}
if (length(a)==50){
lower48 <- state.abb!="AK" & state.abb!="HI"
a <- a[lower48]
}
else if (length(a)!=48) stop ("wrong number of states")
mapping <- list (1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20:22,23:24,25,26,27,28,29,30,31,32,33,34:37,38:40,41,42,43,44,45,46,47,48,49,50,51,52,53:55,56:60,61,62,63)
# for (i in 1:length(mapping)) print(regions[mapping[[i]]])
a.long <- rep (NA, 63)
projection <- "bonne"
for (i in 1:48){
a.long[mapping[[i]]] <- a[i]
}
if (grayscale){
a.long.scaled <- .95*(a.long-min(a,na.rm=TRUE))/(max(a,na.rm=TRUE)-min(a,na.rm=TRUE))
shades <- a.long.scaled
not.dc <- !is.na(a.long.scaled)
shades[not.dc] <- gray (shades[not.dc])
map('state', proj=projection, param=25, lty=0, ...)
m <- map('state', proj=projection, param=25, fill=TRUE, plot=FALSE)
polygon(m$x,m$y, col=shades, lwd=0.5, border="gray30")
}
else {
map('state', proj=projection, param=25, lty=0, ...)
m <- map('state', proj=projection, param=25, fill=TRUE, plot=FALSE)
polygon(m$x,m$y, col=a.long, lwd=0.5, border="gray30")
}
}
# Functions that make a pretty color scheme
blrd <- function(n) {
if (n %% 2 == 1){
n2 <- (n + 1)/2
return(c(hsv(4/6,1,0.6,alpha=seq(1,0,length.out=n2))[1:(n2-1)], "white", hsv(1,1,0.6,alpha=seq(0,1,length.out=n2))[2:n2]))
}
else if (n %% 2 == 0) {
n2 <- n/2
return(c(hsv(4/6,1,0.6,alpha=seq(1,0,length.out=(n2+1)))[1:n2], hsv(1,1,0.6,alpha=seq(0,1,length.out=(n2+1)))[2:(n2+1)]))
}
}
redblue <- function (a, lo=min(a), hi=max(a), n.shades=1001){
a <- pmin (hi, pmax (lo, a))
return (blrd(n.shades)[floor (1 + (n.shades-1)*(a-lo)/(hi-lo))])
}
# Data from 2004 and 2008 elections
elections <- read.table("http://www.stat.columbia.edu/~gelman/surveys.course/pres20042008.txt")
no_dc <- rownames(elections) != "DC"
# Now let's make some maps!
png ("2008_2004_residuals.png", height=300, width=400)
par (mar=c(2,0,0,0))
M1 <- lm (obama08 ~ kerry04, data=elections, subset=no_dc)
statemaps (resid(M1), grayscale=TRUE)
mtext ("Residuals from predicting Obama08 from Kerry04", line=-1)
mtext ("Light colors:  Obama did relatively well in 2008,\nDark colors:  McCain did relatively well in 2008", side=1, line=0, cex=.8)
dev.off()
png ("2008_2004_difference.png", height=300, width=400)
par (mar=c(0,0,0,0))
x <- elections[no_dc,"kerry04"]
y <- elections[no_dc,"obama08"]
statemaps (redblue(x-y, -.1, .1))
mtext ("Obama did better than Kerry in nearly every state", line=-2)
mtext ("Blue:  Obama did better in 2008 than Kerry did in 2004,\nRed:  Obama did worse than Kerry,\nLight colors:  Little or no change", side=1, line=-1, cex=.8)
dev.off()
png ("2008_2004_residuals.png", height=300, width=400)
par (mar=c(2,0,0,0))
M1 <- lm (obama08 ~ kerry04, data=elections, subset=no_dc)
statemaps (resid(M1), grayscale=TRUE)
mtext ("Residuals from predicting Obama08 from Kerry04", line=-1)
mtext ("Light colors:  Obama did relatively well in 2008,\nDark colors:  McCain did relatively well in 2008", side=1, line=0, cex=.8)
dev.off()
png ("2008_2004_difference.png", height=300, width=400)
par (mar=c(0,0,0,0))
x <- elections[no_dc,"kerry04"]
y <- elections[no_dc,"obama08"]
statemaps (redblue(x-y, -.1, .1))
mtext ("Obama did better than Kerry in nearly every state", line=-2)
mtext ("Blue:  Obama did better in 2008 than Kerry did in 2004,\nRed:  Obama did worse than Kerry,\nLight colors:  Little or no change", side=1, line=-1, cex=.8)
dev.off()
?zip_choropleth
?zip_choropleth
?zip_choropleth
library(choroplethrZip)
?zip_choropleth
head(zip.region)
data(zip.regions)
head(zip.regions)
ny <- subset(zip.regions,county.fips.numeric==36061)
dim(ny)
region <- zip.map$region[zip.map$county.fips.numeric==36061]
region
region
log(.01)
log(.02)
log(1)
?logit
??logit
library(arm)
logit(0)
curve(logit(x),0,1,.01)
curve(logit(x),0.00001,.9999999,.01)
curve(logit(x),0.00001,.9999999,1000)
ny <- subset(zip.regions,zip.regions$county.fips.numeric==36061)
dim(ny)
ny.region <- ny$region
data.zip <- data.frame(region=ny.region,value=rnorm(length(ny.region),0,1))
zip_choropleth(data.zip,
title       = "2009 Manhattan housing sales",
legend      = "Number of sales",
county_zoom = 36061)
class(ny.region)
class(data.zip$region)
data.zip <- data.frame(region=ny.region,value=rnorm(length(ny.region),0,1),stringsAsFactors = F)
zip_choropleth(data.zip,
title       = "2009 Manhattan housing sales",
legend      = "Number of sales",
county_zoom = 36061)
?zip_choropleth
zip_choropleth(data.zip, title = "2009 Manhattan housing sales", legend = "Number of sales", county_zoom = 36061, reference_map = T)
.25*(1-1.2-1.6)
